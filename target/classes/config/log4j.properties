# ------------------------------------------------------------
# Root Logger
# ------------------------------------------------------------
# Level and Appender Setting
# 1. levels are ordered
#    DEBUG < INFO < WARN < ERROR < FATAL
# 2. Here is another configuration that uses multiple appenders.
#    A1 Appender will output the following on the console.
#    In Addtion, output will also be directed to the example.log file.
#
# ex) log4j.rootLogger	= WARN, A1, A2
#     log4j.appender.A1	= org.apache.log4j.ConsoleAppender
#     log4j.appender.A2 = org.apache.log4j.FileAppender
#
# Appender Additivity
# --------------------
# The output of a log statement of logger C will go to all the appenders
# in C and its ancestors. This is the meaning of the term "appender additivity".
# However, if an ancestor of logger C, say P, has the additivity flag set
# to false, then C's output will be directed to all the appenders in C and
# it's ancestors upto and including P but not the appenders in any of
# the ancestors of P. 
# Loggers have their additivity flag set to true by default. 
# ------------------------------------------------------------

log4j.rootLogger=DEBUG, Console, logfile

log4j.logger.org.springframework = WARN


#Console
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n
log4j.appender.com.gas.webapp=DEBUG, console

# mybatis loggers #
log4j.logger.com.ibatis=DEBUG, console
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG, console
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG, console
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG, console
log4j.logger.org.mybatis.spring = DEBUG

log4j.logger.org.apache = INFO, console

# ------------------------------------------------------------
# Appender Setting
# ------------------------------------------------------------
# kind of appender>
# + ConsoleAppender	: the default target is System.out.
# + FileAppender	: appends log events to a file
#		- File
#				file path
# + RollingFileAppender	: to backup the log files when they reach a certain size.
#		- MaxFileSize
#				Set the maximum size that the output file is allowed
#				to reach before being rolled over to backup files.
#		- MaxBackupIndex
#				Set the maximum number of backup files to keep around.
# + DailyRollingFileAppender :
# + SocketAppender :
# + syslogAppender :
# + TelnetAppender :
# + SMTPAppender :

# ------------------------------------------------------------
# Layout
# ------------------------------------------------------------
# The conversion pattern uses format specifiers. You might want to
# change the pattern an watch the output format change.
# -----------------------------
# Conversion Character : Effect
# -----------------------------
# c : category name
# C : Class name (slow)
# d : date - ex) %d{dd MMM yyyy HH:mm:ss,SSS}
# F : File name (extremely slow)
# l : location information of the caller (extremely slow)
#     "fully qualified class name"."method name"(java file name:line number)
# L : Line number (extremely slow)
# m : message
# M : Method name (extremely slow)
# n : new line
# p : priority (level)
# r : time since the start of application (milliseconds)
# t : name of the thread
# x : NDC (Nested Diagnostic Context)
# X : MDC (Mapped Diagnostic Context)
# % : %% output
# -----------------------------
# Format : comment
# -----------------------------
# %20m     : Left pad if less than 20
# %-20m    : Right pad "
# %.30m    : Truncate if longer than 30
# %20.30m  : Left pad and Truncate
# %-20.30m : Right pad and Truncate

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%p [%M(%L)] - %m [%c]%n

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%p [%M(%L)] - %m [%c]%n

log4j.appender.logfile=org.apache.log4j.RollingFileAppender
log4j.appender.logfile.File=${webcon.home}/logs/webcon-server.log
log4j.appender.logfile.MaxFileSize=10MB
# Keep three backup files.
log4j.appender.logfile.MaxBackupIndex=10
# Pattern to output: date priority [category] - message
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d [%5p] - %m%n
